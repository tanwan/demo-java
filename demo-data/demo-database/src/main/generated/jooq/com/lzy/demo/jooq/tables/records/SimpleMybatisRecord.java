package com.lzy.demo.jooq.tables.records;


import com.lzy.demo.jooq.enums.SimpleMybatisUseStringEnum;
import com.lzy.demo.jooq.tables.SimpleMybatis;
import com.lzy.demo.jooq.tables.interfaces.ISimpleMybatis;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SimpleMybatisRecord extends UpdatableRecordImpl<SimpleMybatisRecord> implements Record7<Integer, String, SimpleMybatisUseStringEnum, Integer, Integer, Integer, Integer>, ISimpleMybatis {

    private static final long serialVersionUID = -763613668;

    /**
     * Setter for <code>demo.simple_mybatis.id</code>.
     */
    @Override
    public SimpleMybatisRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>demo.simple_mybatis.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>demo.simple_mybatis.name</code>.
     */
    @Override
    public SimpleMybatisRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>demo.simple_mybatis.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>demo.simple_mybatis.use_string_enum</code>.
     */
    @Override
    public SimpleMybatisRecord setUseStringEnum(SimpleMybatisUseStringEnum value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>demo.simple_mybatis.use_string_enum</code>.
     */
    @Override
    public SimpleMybatisUseStringEnum getUseStringEnum() {
        return (SimpleMybatisUseStringEnum) get(2);
    }

    /**
     * Setter for <code>demo.simple_mybatis.use_index_enum</code>.
     */
    @Override
    public SimpleMybatisRecord setUseIndexEnum(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>demo.simple_mybatis.use_index_enum</code>.
     */
    @Override
    public Integer getUseIndexEnum() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>demo.simple_mybatis.use_enum_value_enum</code>.
     */
    @Override
    public SimpleMybatisRecord setUseEnumValueEnum(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>demo.simple_mybatis.use_enum_value_enum</code>.
     */
    @Override
    public Integer getUseEnumValueEnum() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>demo.simple_mybatis.version</code>.
     */
    @Override
    public SimpleMybatisRecord setVersion(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>demo.simple_mybatis.version</code>.
     */
    @Override
    public Integer getVersion() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>demo.simple_mybatis.del_flg</code>.
     */
    @Override
    public SimpleMybatisRecord setDelFlg(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>demo.simple_mybatis.del_flg</code>.
     */
    @Override
    public Integer getDelFlg() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, SimpleMybatisUseStringEnum, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, SimpleMybatisUseStringEnum, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SimpleMybatis.SIMPLE_MYBATIS.ID;
    }

    @Override
    public Field<String> field2() {
        return SimpleMybatis.SIMPLE_MYBATIS.NAME;
    }

    @Override
    public Field<SimpleMybatisUseStringEnum> field3() {
        return SimpleMybatis.SIMPLE_MYBATIS.USE_STRING_ENUM;
    }

    @Override
    public Field<Integer> field4() {
        return SimpleMybatis.SIMPLE_MYBATIS.USE_INDEX_ENUM;
    }

    @Override
    public Field<Integer> field5() {
        return SimpleMybatis.SIMPLE_MYBATIS.USE_ENUM_VALUE_ENUM;
    }

    @Override
    public Field<Integer> field6() {
        return SimpleMybatis.SIMPLE_MYBATIS.VERSION;
    }

    @Override
    public Field<Integer> field7() {
        return SimpleMybatis.SIMPLE_MYBATIS.DEL_FLG;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public SimpleMybatisUseStringEnum component3() {
        return getUseStringEnum();
    }

    @Override
    public Integer component4() {
        return getUseIndexEnum();
    }

    @Override
    public Integer component5() {
        return getUseEnumValueEnum();
    }

    @Override
    public Integer component6() {
        return getVersion();
    }

    @Override
    public Integer component7() {
        return getDelFlg();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public SimpleMybatisUseStringEnum value3() {
        return getUseStringEnum();
    }

    @Override
    public Integer value4() {
        return getUseIndexEnum();
    }

    @Override
    public Integer value5() {
        return getUseEnumValueEnum();
    }

    @Override
    public Integer value6() {
        return getVersion();
    }

    @Override
    public Integer value7() {
        return getDelFlg();
    }

    @Override
    public SimpleMybatisRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SimpleMybatisRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public SimpleMybatisRecord value3(SimpleMybatisUseStringEnum value) {
        setUseStringEnum(value);
        return this;
    }

    @Override
    public SimpleMybatisRecord value4(Integer value) {
        setUseIndexEnum(value);
        return this;
    }

    @Override
    public SimpleMybatisRecord value5(Integer value) {
        setUseEnumValueEnum(value);
        return this;
    }

    @Override
    public SimpleMybatisRecord value6(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public SimpleMybatisRecord value7(Integer value) {
        setDelFlg(value);
        return this;
    }

    @Override
    public SimpleMybatisRecord values(Integer value1, String value2, SimpleMybatisUseStringEnum value3, Integer value4, Integer value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISimpleMybatis from) {
        setId(from.getId());
        setName(from.getName());
        setUseStringEnum(from.getUseStringEnum());
        setUseIndexEnum(from.getUseIndexEnum());
        setUseEnumValueEnum(from.getUseEnumValueEnum());
        setVersion(from.getVersion());
        setDelFlg(from.getDelFlg());
    }

    @Override
    public <E extends ISimpleMybatis> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SimpleMybatisRecord
     */
    public SimpleMybatisRecord() {
        super(SimpleMybatis.SIMPLE_MYBATIS);
    }

    /**
     * Create a detached, initialised SimpleMybatisRecord
     */
    public SimpleMybatisRecord(Integer id, String name, SimpleMybatisUseStringEnum useStringEnum, Integer useIndexEnum, Integer useEnumValueEnum, Integer version, Integer delFlg) {
        super(SimpleMybatis.SIMPLE_MYBATIS);

        set(0, id);
        set(1, name);
        set(2, useStringEnum);
        set(3, useIndexEnum);
        set(4, useEnumValueEnum);
        set(5, version);
        set(6, delFlg);
    }
}
