package com.lzy.demo.jooq.tables.interfaces;


import com.lzy.demo.jooq.enums.SimpleJooqUseStringEnum;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ISimpleJooq extends Serializable {

    /**
     * Setter for <code>demo.simple_jooq.id</code>.
     */
    public ISimpleJooq setId(Integer value);

    /**
     * Getter for <code>demo.simple_jooq.id</code>.
     */
    public Integer getId();

    /**
     * Setter for <code>demo.simple_jooq.name</code>.
     */
    public ISimpleJooq setName(String value);

    /**
     * Getter for <code>demo.simple_jooq.name</code>.
     */
    public String getName();

    /**
     * Setter for <code>demo.simple_jooq.use_string_enum</code>.
     */
    public ISimpleJooq setUseStringEnum(SimpleJooqUseStringEnum value);

    /**
     * Getter for <code>demo.simple_jooq.use_string_enum</code>.
     */
    public SimpleJooqUseStringEnum getUseStringEnum();

    /**
     * Setter for <code>demo.simple_jooq.use_index_enum</code>.
     */
    public ISimpleJooq setUseIndexEnum(Integer value);

    /**
     * Getter for <code>demo.simple_jooq.use_index_enum</code>.
     */
    public Integer getUseIndexEnum();

    /**
     * Setter for <code>demo.simple_jooq.use_enum_value_enum</code>.
     */
    public ISimpleJooq setUseEnumValueEnum(Integer value);

    /**
     * Getter for <code>demo.simple_jooq.use_enum_value_enum</code>.
     */
    public Integer getUseEnumValueEnum();

    /**
     * Setter for <code>demo.simple_jooq.version</code>.
     */
    public ISimpleJooq setVersion(Integer value);

    /**
     * Getter for <code>demo.simple_jooq.version</code>.
     */
    public Integer getVersion();

    /**
     * Setter for <code>demo.simple_jooq.del_flg</code>.
     */
    public ISimpleJooq setDelFlg(Integer value);

    /**
     * Getter for <code>demo.simple_jooq.del_flg</code>.
     */
    public Integer getDelFlg();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ISimpleJooq
     */
    public void from(ISimpleJooq from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ISimpleJooq
     */
    public <E extends ISimpleJooq> E into(E into);
}
