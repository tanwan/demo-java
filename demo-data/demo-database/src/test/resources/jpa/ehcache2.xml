<ehcache>
    <!-- 配置硬盘文件缓存地址 -->
    <diskStore path="java.io.tmpdir"/>
    <!-- 默认缓存 -->
    <defaultCache
            maxElementsInMemory="5000"
            maxElementsOnDisk="5000"
            eternal="false"
            timeToIdleSeconds="3600"
            timeToLiveSeconds="3600"
            overflowToDisk="false"
            memoryStoreEvictionPolicy="LRU"/>
    <!--配置
        name="cacheTest" 缓存名称
        maxElementsInMemory=“5000” 内存中最多允许保存的数量
        maxElementsOnDisk="5000"   磁盘中最多允许保存的数量
        external=“false” 缓存中对象是否为永久的,如果是,超时设置将被忽略,对象从不过期
        timeToIdleSeconds=“3600”  缓存数据钝化时间(对象在它过期之前的空闲时间)
        timeToLiveSeconds=“3600”  缓存数据的生存时间(对象在它过期之前的生存时间)
        overflowToDisk=“false”    内存不足时,是否启用磁盘缓存
        memoryStoreEvictionPolicy="LRU" 内存不足时数据对象的清除策略
        ehcache中缓存的3种清空策略：
            FIFO(first in first out):先进先出
            LFU( Less Frequently Used):一直以来最少被使用的.如上面所讲,缓存的元素有一个hit属性,hit值最小的将会被清出缓存
            LRU(Least Recently Used):最近最少使用的,缓存的元素有一个时间戳,命中缓存时,会更新时间戳,当缓存容量满了,时间戳离当前时间最远的元素将被清除
    -->
    <cache name="simpleJpa"
           maxElementsInMemory="10"/>

    <cache name="queryCacheRegion"
           maxElementsInMemory="10"/>
</ehcache>