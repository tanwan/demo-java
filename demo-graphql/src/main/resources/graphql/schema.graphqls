# graphqls和graphql其实是一样的,只是graphqls用来定义scheme, graphql用来client端定义query和mutation
type SimpleEntity {
    #!表示非空,[String!]!表示数组非空,数组里的元素也非空
    id: ID!
    integer: Int
    str: String!
    dateTime: DateTime
    withDirective:String @simpleDirective(str:"simple string",array:[1],bool:true)
    nPlusOneProblem: Int!
    batchMapping: Int!
}

#定义类型
input SimpleRequest {
    id: ID
    str: String
    dateTime: DateTime
}

#有且必须只能有一个Query(查)
type Query {
}

#有且最多只能有一个Mutation(增删改)
type Mutation {
}

#可以使用extend继承,这样query可以放在多个文件
extend type Query {
    baseQuery: [SimpleEntity]
    arguments(integer:Int, str:String): SimpleEntity
    #使用定义的类型
    argumentsWithType(request:SimpleRequest):SimpleEntity
}

extend type Mutation {
    simpleMutation(request:SimpleRequest): SimpleEntity
}

#自定义指令
directive @simpleDirective(str: String, array:[Int], bool: Boolean) on FIELD_DEFINITION

#see com.lzy.demo.graphql.config.GraphQLConfig.runtimeWiringConfigurer
scalar DateTime